//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-rc.1
// 	protoc        v3.17.3
// source: AccessControl.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Permission_Action int32

const (
	Permission_READ   Permission_Action = 0
	Permission_WRITE  Permission_Action = 1
	Permission_EXEC   Permission_Action = 2
	Permission_CREATE Permission_Action = 3
	Permission_ADMIN  Permission_Action = 4
)

// Enum value maps for Permission_Action.
var (
	Permission_Action_name = map[int32]string{
		0: "READ",
		1: "WRITE",
		2: "EXEC",
		3: "CREATE",
		4: "ADMIN",
	}
	Permission_Action_value = map[string]int32{
		"READ":   0,
		"WRITE":  1,
		"EXEC":   2,
		"CREATE": 3,
		"ADMIN":  4,
	}
)

func (x Permission_Action) Enum() *Permission_Action {
	p := new(Permission_Action)
	*p = x
	return p
}

func (x Permission_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Permission_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_AccessControl_proto_enumTypes[0].Descriptor()
}

func (Permission_Action) Type() protoreflect.EnumType {
	return &file_AccessControl_proto_enumTypes[0]
}

func (x Permission_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Permission_Action) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Permission_Action(num)
	return nil
}

// Deprecated: Use Permission_Action.Descriptor instead.
func (Permission_Action) EnumDescriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{0, 0}
}

type Permission_Type int32

const (
	Permission_Global    Permission_Type = 1
	Permission_Namespace Permission_Type = 2
	Permission_Table     Permission_Type = 3
)

// Enum value maps for Permission_Type.
var (
	Permission_Type_name = map[int32]string{
		1: "Global",
		2: "Namespace",
		3: "Table",
	}
	Permission_Type_value = map[string]int32{
		"Global":    1,
		"Namespace": 2,
		"Table":     3,
	}
)

func (x Permission_Type) Enum() *Permission_Type {
	p := new(Permission_Type)
	*p = x
	return p
}

func (x Permission_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Permission_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_AccessControl_proto_enumTypes[1].Descriptor()
}

func (Permission_Type) Type() protoreflect.EnumType {
	return &file_AccessControl_proto_enumTypes[1]
}

func (x Permission_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Permission_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Permission_Type(num)
	return nil
}

// Deprecated: Use Permission_Type.Descriptor instead.
func (Permission_Type) EnumDescriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{0, 1}
}

type Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                *Permission_Type     `protobuf:"varint,1,req,name=type,enum=hbase.pb.Permission_Type" json:"type,omitempty"`
	GlobalPermission    *GlobalPermission    `protobuf:"bytes,2,opt,name=global_permission,json=globalPermission" json:"global_permission,omitempty"`
	NamespacePermission *NamespacePermission `protobuf:"bytes,3,opt,name=namespace_permission,json=namespacePermission" json:"namespace_permission,omitempty"`
	TablePermission     *TablePermission     `protobuf:"bytes,4,opt,name=table_permission,json=tablePermission" json:"table_permission,omitempty"`
}

func (x *Permission) Reset() {
	*x = Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{0}
}

func (x *Permission) GetType() Permission_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Permission_Global
}

func (x *Permission) GetGlobalPermission() *GlobalPermission {
	if x != nil {
		return x.GlobalPermission
	}
	return nil
}

func (x *Permission) GetNamespacePermission() *NamespacePermission {
	if x != nil {
		return x.NamespacePermission
	}
	return nil
}

func (x *Permission) GetTablePermission() *TablePermission {
	if x != nil {
		return x.TablePermission
	}
	return nil
}

type TablePermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName *TableName          `protobuf:"bytes,1,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	Family    []byte              `protobuf:"bytes,2,opt,name=family" json:"family,omitempty"`
	Qualifier []byte              `protobuf:"bytes,3,opt,name=qualifier" json:"qualifier,omitempty"`
	Action    []Permission_Action `protobuf:"varint,4,rep,name=action,enum=hbase.pb.Permission_Action" json:"action,omitempty"`
}

func (x *TablePermission) Reset() {
	*x = TablePermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TablePermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TablePermission) ProtoMessage() {}

func (x *TablePermission) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TablePermission.ProtoReflect.Descriptor instead.
func (*TablePermission) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{1}
}

func (x *TablePermission) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

func (x *TablePermission) GetFamily() []byte {
	if x != nil {
		return x.Family
	}
	return nil
}

func (x *TablePermission) GetQualifier() []byte {
	if x != nil {
		return x.Qualifier
	}
	return nil
}

func (x *TablePermission) GetAction() []Permission_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

type NamespacePermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceName []byte              `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName" json:"namespace_name,omitempty"`
	Action        []Permission_Action `protobuf:"varint,2,rep,name=action,enum=hbase.pb.Permission_Action" json:"action,omitempty"`
}

func (x *NamespacePermission) Reset() {
	*x = NamespacePermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespacePermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespacePermission) ProtoMessage() {}

func (x *NamespacePermission) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespacePermission.ProtoReflect.Descriptor instead.
func (*NamespacePermission) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{2}
}

func (x *NamespacePermission) GetNamespaceName() []byte {
	if x != nil {
		return x.NamespaceName
	}
	return nil
}

func (x *NamespacePermission) GetAction() []Permission_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

type GlobalPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action []Permission_Action `protobuf:"varint,1,rep,name=action,enum=hbase.pb.Permission_Action" json:"action,omitempty"`
}

func (x *GlobalPermission) Reset() {
	*x = GlobalPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalPermission) ProtoMessage() {}

func (x *GlobalPermission) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalPermission.ProtoReflect.Descriptor instead.
func (*GlobalPermission) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{3}
}

func (x *GlobalPermission) GetAction() []Permission_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

type UserPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User       []byte      `protobuf:"bytes,1,req,name=user" json:"user,omitempty"`
	Permission *Permission `protobuf:"bytes,3,req,name=permission" json:"permission,omitempty"`
}

func (x *UserPermission) Reset() {
	*x = UserPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermission) ProtoMessage() {}

func (x *UserPermission) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermission.ProtoReflect.Descriptor instead.
func (*UserPermission) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{4}
}

func (x *UserPermission) GetUser() []byte {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserPermission) GetPermission() *Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

//*
// Content of the /hbase/acl/<table or namespace> znode.
type UsersAndPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPermissions []*UsersAndPermissions_UserPermissions `protobuf:"bytes,1,rep,name=user_permissions,json=userPermissions" json:"user_permissions,omitempty"`
}

func (x *UsersAndPermissions) Reset() {
	*x = UsersAndPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersAndPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersAndPermissions) ProtoMessage() {}

func (x *UsersAndPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersAndPermissions.ProtoReflect.Descriptor instead.
func (*UsersAndPermissions) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{5}
}

func (x *UsersAndPermissions) GetUserPermissions() []*UsersAndPermissions_UserPermissions {
	if x != nil {
		return x.UserPermissions
	}
	return nil
}

type GrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPermission           *UserPermission `protobuf:"bytes,1,req,name=user_permission,json=userPermission" json:"user_permission,omitempty"`
	MergeExistingPermissions *bool           `protobuf:"varint,2,opt,name=merge_existing_permissions,json=mergeExistingPermissions,def=0" json:"merge_existing_permissions,omitempty"`
}

// Default values for GrantRequest fields.
const (
	Default_GrantRequest_MergeExistingPermissions = bool(false)
)

func (x *GrantRequest) Reset() {
	*x = GrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantRequest) ProtoMessage() {}

func (x *GrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantRequest.ProtoReflect.Descriptor instead.
func (*GrantRequest) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{6}
}

func (x *GrantRequest) GetUserPermission() *UserPermission {
	if x != nil {
		return x.UserPermission
	}
	return nil
}

func (x *GrantRequest) GetMergeExistingPermissions() bool {
	if x != nil && x.MergeExistingPermissions != nil {
		return *x.MergeExistingPermissions
	}
	return Default_GrantRequest_MergeExistingPermissions
}

type GrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GrantResponse) Reset() {
	*x = GrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantResponse) ProtoMessage() {}

func (x *GrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantResponse.ProtoReflect.Descriptor instead.
func (*GrantResponse) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{7}
}

type RevokeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPermission *UserPermission `protobuf:"bytes,1,req,name=user_permission,json=userPermission" json:"user_permission,omitempty"`
}

func (x *RevokeRequest) Reset() {
	*x = RevokeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeRequest) ProtoMessage() {}

func (x *RevokeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeRequest.ProtoReflect.Descriptor instead.
func (*RevokeRequest) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{8}
}

func (x *RevokeRequest) GetUserPermission() *UserPermission {
	if x != nil {
		return x.UserPermission
	}
	return nil
}

type RevokeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeResponse) Reset() {
	*x = RevokeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeResponse) ProtoMessage() {}

func (x *RevokeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeResponse.ProtoReflect.Descriptor instead.
func (*RevokeResponse) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{9}
}

type GetUserPermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            *Permission_Type `protobuf:"varint,1,opt,name=type,enum=hbase.pb.Permission_Type" json:"type,omitempty"`
	TableName       *TableName       `protobuf:"bytes,2,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	NamespaceName   []byte           `protobuf:"bytes,3,opt,name=namespace_name,json=namespaceName" json:"namespace_name,omitempty"`
	ColumnFamily    []byte           `protobuf:"bytes,4,opt,name=column_family,json=columnFamily" json:"column_family,omitempty"`
	ColumnQualifier []byte           `protobuf:"bytes,5,opt,name=column_qualifier,json=columnQualifier" json:"column_qualifier,omitempty"`
	UserName        []byte           `protobuf:"bytes,6,opt,name=user_name,json=userName" json:"user_name,omitempty"`
}

func (x *GetUserPermissionsRequest) Reset() {
	*x = GetUserPermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPermissionsRequest) ProtoMessage() {}

func (x *GetUserPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetUserPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserPermissionsRequest) GetType() Permission_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Permission_Global
}

func (x *GetUserPermissionsRequest) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

func (x *GetUserPermissionsRequest) GetNamespaceName() []byte {
	if x != nil {
		return x.NamespaceName
	}
	return nil
}

func (x *GetUserPermissionsRequest) GetColumnFamily() []byte {
	if x != nil {
		return x.ColumnFamily
	}
	return nil
}

func (x *GetUserPermissionsRequest) GetColumnQualifier() []byte {
	if x != nil {
		return x.ColumnQualifier
	}
	return nil
}

func (x *GetUserPermissionsRequest) GetUserName() []byte {
	if x != nil {
		return x.UserName
	}
	return nil
}

type GetUserPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPermission []*UserPermission `protobuf:"bytes,1,rep,name=user_permission,json=userPermission" json:"user_permission,omitempty"`
}

func (x *GetUserPermissionsResponse) Reset() {
	*x = GetUserPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPermissionsResponse) ProtoMessage() {}

func (x *GetUserPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetUserPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserPermissionsResponse) GetUserPermission() []*UserPermission {
	if x != nil {
		return x.UserPermission
	}
	return nil
}

type CheckPermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permission []*Permission `protobuf:"bytes,1,rep,name=permission" json:"permission,omitempty"`
}

func (x *CheckPermissionsRequest) Reset() {
	*x = CheckPermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionsRequest) ProtoMessage() {}

func (x *CheckPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionsRequest.ProtoReflect.Descriptor instead.
func (*CheckPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{12}
}

func (x *CheckPermissionsRequest) GetPermission() []*Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

type CheckPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckPermissionsResponse) Reset() {
	*x = CheckPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionsResponse) ProtoMessage() {}

func (x *CheckPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionsResponse.ProtoReflect.Descriptor instead.
func (*CheckPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{13}
}

type HasUserPermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName   []byte        `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	Permission []*Permission `protobuf:"bytes,2,rep,name=permission" json:"permission,omitempty"`
}

func (x *HasUserPermissionsRequest) Reset() {
	*x = HasUserPermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasUserPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasUserPermissionsRequest) ProtoMessage() {}

func (x *HasUserPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasUserPermissionsRequest.ProtoReflect.Descriptor instead.
func (*HasUserPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{14}
}

func (x *HasUserPermissionsRequest) GetUserName() []byte {
	if x != nil {
		return x.UserName
	}
	return nil
}

func (x *HasUserPermissionsRequest) GetPermission() []*Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

type HasUserPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasUserPermission []bool `protobuf:"varint,1,rep,name=has_user_permission,json=hasUserPermission" json:"has_user_permission,omitempty"`
}

func (x *HasUserPermissionsResponse) Reset() {
	*x = HasUserPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasUserPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasUserPermissionsResponse) ProtoMessage() {}

func (x *HasUserPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasUserPermissionsResponse.ProtoReflect.Descriptor instead.
func (*HasUserPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{15}
}

func (x *HasUserPermissionsResponse) GetHasUserPermission() []bool {
	if x != nil {
		return x.HasUserPermission
	}
	return nil
}

type UsersAndPermissions_UserPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        []byte        `protobuf:"bytes,1,req,name=user" json:"user,omitempty"`
	Permissions []*Permission `protobuf:"bytes,2,rep,name=permissions" json:"permissions,omitempty"`
}

func (x *UsersAndPermissions_UserPermissions) Reset() {
	*x = UsersAndPermissions_UserPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AccessControl_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersAndPermissions_UserPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersAndPermissions_UserPermissions) ProtoMessage() {}

func (x *UsersAndPermissions_UserPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_AccessControl_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersAndPermissions_UserPermissions.ProtoReflect.Descriptor instead.
func (*UsersAndPermissions_UserPermissions) Descriptor() ([]byte, []int) {
	return file_AccessControl_proto_rawDescGZIP(), []int{5, 0}
}

func (x *UsersAndPermissions_UserPermissions) GetUser() []byte {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UsersAndPermissions_UserPermissions) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

var File_AccessControl_proto protoreflect.FileDescriptor

var file_AccessControl_proto_rawDesc = []byte{
	0x0a, 0x13, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x1a,
	0x0b, 0x48, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x03, 0x0a,
	0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x68, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x14, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x13, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x10, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x0a, 0x06, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x44, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x58,
	0x45, 0x43, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x03,
	0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x04, 0x22, 0x2c, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x10, 0x02, 0x12, 0x09,
	0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x03, 0x22, 0xb0, 0x01, 0x0a, 0x0f, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a,
	0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x61,
	0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x71, 0x0a, 0x13,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x68, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x47, 0x0a, 0x10, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x34,
	0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0xce, 0x01, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x6e,
	0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x58, 0x0a, 0x10,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x5d, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x36, 0x0a,
	0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x0c, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x1a, 0x6d, 0x65, 0x72,
	0x67, 0x65, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66,
	0x61, 0x6c, 0x73, 0x65, 0x52, 0x18, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x0f,
	0x0a, 0x0d, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x52, 0x0a, 0x0d, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x41, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x92, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x46, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x71, 0x75, 0x61,
	0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x17, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1a, 0x0a, 0x18,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6e, 0x0a, 0x19, 0x48, 0x61, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x1a, 0x48, 0x61, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x61, 0x73, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x08, 0x52, 0x11, 0x68, 0x61, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0xc9, 0x02, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x38, 0x0a, 0x05, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x12, 0x17, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x68,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x68,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x68, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x57, 0x0a, 0x31, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65,
	0x2e, 0x68, 0x61, 0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x73, 0x68,
	0x61, 0x64, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x42, 0x13, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x48, 0x01, 0x5a, 0x05,
	0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x88, 0x01, 0x01, 0xa0, 0x01, 0x01,
}

var (
	file_AccessControl_proto_rawDescOnce sync.Once
	file_AccessControl_proto_rawDescData = file_AccessControl_proto_rawDesc
)

func file_AccessControl_proto_rawDescGZIP() []byte {
	file_AccessControl_proto_rawDescOnce.Do(func() {
		file_AccessControl_proto_rawDescData = protoimpl.X.CompressGZIP(file_AccessControl_proto_rawDescData)
	})
	return file_AccessControl_proto_rawDescData
}

var file_AccessControl_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_AccessControl_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_AccessControl_proto_goTypes = []interface{}{
	(Permission_Action)(0),                      // 0: hbase.pb.Permission.Action
	(Permission_Type)(0),                        // 1: hbase.pb.Permission.Type
	(*Permission)(nil),                          // 2: hbase.pb.Permission
	(*TablePermission)(nil),                     // 3: hbase.pb.TablePermission
	(*NamespacePermission)(nil),                 // 4: hbase.pb.NamespacePermission
	(*GlobalPermission)(nil),                    // 5: hbase.pb.GlobalPermission
	(*UserPermission)(nil),                      // 6: hbase.pb.UserPermission
	(*UsersAndPermissions)(nil),                 // 7: hbase.pb.UsersAndPermissions
	(*GrantRequest)(nil),                        // 8: hbase.pb.GrantRequest
	(*GrantResponse)(nil),                       // 9: hbase.pb.GrantResponse
	(*RevokeRequest)(nil),                       // 10: hbase.pb.RevokeRequest
	(*RevokeResponse)(nil),                      // 11: hbase.pb.RevokeResponse
	(*GetUserPermissionsRequest)(nil),           // 12: hbase.pb.GetUserPermissionsRequest
	(*GetUserPermissionsResponse)(nil),          // 13: hbase.pb.GetUserPermissionsResponse
	(*CheckPermissionsRequest)(nil),             // 14: hbase.pb.CheckPermissionsRequest
	(*CheckPermissionsResponse)(nil),            // 15: hbase.pb.CheckPermissionsResponse
	(*HasUserPermissionsRequest)(nil),           // 16: hbase.pb.HasUserPermissionsRequest
	(*HasUserPermissionsResponse)(nil),          // 17: hbase.pb.HasUserPermissionsResponse
	(*UsersAndPermissions_UserPermissions)(nil), // 18: hbase.pb.UsersAndPermissions.UserPermissions
	(*TableName)(nil),                           // 19: hbase.pb.TableName
}
var file_AccessControl_proto_depIdxs = []int32{
	1,  // 0: hbase.pb.Permission.type:type_name -> hbase.pb.Permission.Type
	5,  // 1: hbase.pb.Permission.global_permission:type_name -> hbase.pb.GlobalPermission
	4,  // 2: hbase.pb.Permission.namespace_permission:type_name -> hbase.pb.NamespacePermission
	3,  // 3: hbase.pb.Permission.table_permission:type_name -> hbase.pb.TablePermission
	19, // 4: hbase.pb.TablePermission.table_name:type_name -> hbase.pb.TableName
	0,  // 5: hbase.pb.TablePermission.action:type_name -> hbase.pb.Permission.Action
	0,  // 6: hbase.pb.NamespacePermission.action:type_name -> hbase.pb.Permission.Action
	0,  // 7: hbase.pb.GlobalPermission.action:type_name -> hbase.pb.Permission.Action
	2,  // 8: hbase.pb.UserPermission.permission:type_name -> hbase.pb.Permission
	18, // 9: hbase.pb.UsersAndPermissions.user_permissions:type_name -> hbase.pb.UsersAndPermissions.UserPermissions
	6,  // 10: hbase.pb.GrantRequest.user_permission:type_name -> hbase.pb.UserPermission
	6,  // 11: hbase.pb.RevokeRequest.user_permission:type_name -> hbase.pb.UserPermission
	1,  // 12: hbase.pb.GetUserPermissionsRequest.type:type_name -> hbase.pb.Permission.Type
	19, // 13: hbase.pb.GetUserPermissionsRequest.table_name:type_name -> hbase.pb.TableName
	6,  // 14: hbase.pb.GetUserPermissionsResponse.user_permission:type_name -> hbase.pb.UserPermission
	2,  // 15: hbase.pb.CheckPermissionsRequest.permission:type_name -> hbase.pb.Permission
	2,  // 16: hbase.pb.HasUserPermissionsRequest.permission:type_name -> hbase.pb.Permission
	2,  // 17: hbase.pb.UsersAndPermissions.UserPermissions.permissions:type_name -> hbase.pb.Permission
	8,  // 18: hbase.pb.AccessControlService.Grant:input_type -> hbase.pb.GrantRequest
	10, // 19: hbase.pb.AccessControlService.Revoke:input_type -> hbase.pb.RevokeRequest
	12, // 20: hbase.pb.AccessControlService.GetUserPermissions:input_type -> hbase.pb.GetUserPermissionsRequest
	14, // 21: hbase.pb.AccessControlService.CheckPermissions:input_type -> hbase.pb.CheckPermissionsRequest
	9,  // 22: hbase.pb.AccessControlService.Grant:output_type -> hbase.pb.GrantResponse
	11, // 23: hbase.pb.AccessControlService.Revoke:output_type -> hbase.pb.RevokeResponse
	13, // 24: hbase.pb.AccessControlService.GetUserPermissions:output_type -> hbase.pb.GetUserPermissionsResponse
	15, // 25: hbase.pb.AccessControlService.CheckPermissions:output_type -> hbase.pb.CheckPermissionsResponse
	22, // [22:26] is the sub-list for method output_type
	18, // [18:22] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_AccessControl_proto_init() }
func file_AccessControl_proto_init() {
	if File_AccessControl_proto != nil {
		return
	}
	file_HBase_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_AccessControl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TablePermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespacePermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersAndPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasUserPermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasUserPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AccessControl_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersAndPermissions_UserPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_AccessControl_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_AccessControl_proto_goTypes,
		DependencyIndexes: file_AccessControl_proto_depIdxs,
		EnumInfos:         file_AccessControl_proto_enumTypes,
		MessageInfos:      file_AccessControl_proto_msgTypes,
	}.Build()
	File_AccessControl_proto = out.File
	file_AccessControl_proto_rawDesc = nil
	file_AccessControl_proto_goTypes = nil
	file_AccessControl_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AccessControlServiceClient is the client API for AccessControlService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccessControlServiceClient interface {
	Grant(ctx context.Context, in *GrantRequest, opts ...grpc.CallOption) (*GrantResponse, error)
	Revoke(ctx context.Context, in *RevokeRequest, opts ...grpc.CallOption) (*RevokeResponse, error)
	GetUserPermissions(ctx context.Context, in *GetUserPermissionsRequest, opts ...grpc.CallOption) (*GetUserPermissionsResponse, error)
	CheckPermissions(ctx context.Context, in *CheckPermissionsRequest, opts ...grpc.CallOption) (*CheckPermissionsResponse, error)
}

type accessControlServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAccessControlServiceClient(cc grpc.ClientConnInterface) AccessControlServiceClient {
	return &accessControlServiceClient{cc}
}

func (c *accessControlServiceClient) Grant(ctx context.Context, in *GrantRequest, opts ...grpc.CallOption) (*GrantResponse, error) {
	out := new(GrantResponse)
	err := c.cc.Invoke(ctx, "/hbase.pb.AccessControlService/Grant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accessControlServiceClient) Revoke(ctx context.Context, in *RevokeRequest, opts ...grpc.CallOption) (*RevokeResponse, error) {
	out := new(RevokeResponse)
	err := c.cc.Invoke(ctx, "/hbase.pb.AccessControlService/Revoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accessControlServiceClient) GetUserPermissions(ctx context.Context, in *GetUserPermissionsRequest, opts ...grpc.CallOption) (*GetUserPermissionsResponse, error) {
	out := new(GetUserPermissionsResponse)
	err := c.cc.Invoke(ctx, "/hbase.pb.AccessControlService/GetUserPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accessControlServiceClient) CheckPermissions(ctx context.Context, in *CheckPermissionsRequest, opts ...grpc.CallOption) (*CheckPermissionsResponse, error) {
	out := new(CheckPermissionsResponse)
	err := c.cc.Invoke(ctx, "/hbase.pb.AccessControlService/CheckPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccessControlServiceServer is the server API for AccessControlService service.
type AccessControlServiceServer interface {
	Grant(context.Context, *GrantRequest) (*GrantResponse, error)
	Revoke(context.Context, *RevokeRequest) (*RevokeResponse, error)
	GetUserPermissions(context.Context, *GetUserPermissionsRequest) (*GetUserPermissionsResponse, error)
	CheckPermissions(context.Context, *CheckPermissionsRequest) (*CheckPermissionsResponse, error)
}

// UnimplementedAccessControlServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAccessControlServiceServer struct {
}

func (*UnimplementedAccessControlServiceServer) Grant(context.Context, *GrantRequest) (*GrantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Grant not implemented")
}
func (*UnimplementedAccessControlServiceServer) Revoke(context.Context, *RevokeRequest) (*RevokeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Revoke not implemented")
}
func (*UnimplementedAccessControlServiceServer) GetUserPermissions(context.Context, *GetUserPermissionsRequest) (*GetUserPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserPermissions not implemented")
}
func (*UnimplementedAccessControlServiceServer) CheckPermissions(context.Context, *CheckPermissionsRequest) (*CheckPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckPermissions not implemented")
}

func RegisterAccessControlServiceServer(s *grpc.Server, srv AccessControlServiceServer) {
	s.RegisterService(&_AccessControlService_serviceDesc, srv)
}

func _AccessControlService_Grant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessControlServiceServer).Grant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hbase.pb.AccessControlService/Grant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessControlServiceServer).Grant(ctx, req.(*GrantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccessControlService_Revoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessControlServiceServer).Revoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hbase.pb.AccessControlService/Revoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessControlServiceServer).Revoke(ctx, req.(*RevokeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccessControlService_GetUserPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessControlServiceServer).GetUserPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hbase.pb.AccessControlService/GetUserPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessControlServiceServer).GetUserPermissions(ctx, req.(*GetUserPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccessControlService_CheckPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccessControlServiceServer).CheckPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hbase.pb.AccessControlService/CheckPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccessControlServiceServer).CheckPermissions(ctx, req.(*CheckPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccessControlService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hbase.pb.AccessControlService",
	HandlerType: (*AccessControlServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Grant",
			Handler:    _AccessControlService_Grant_Handler,
		},
		{
			MethodName: "Revoke",
			Handler:    _AccessControlService_Revoke_Handler,
		},
		{
			MethodName: "GetUserPermissions",
			Handler:    _AccessControlService_GetUserPermissions_Handler,
		},
		{
			MethodName: "CheckPermissions",
			Handler:    _AccessControlService_CheckPermissions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "AccessControl.proto",
}
