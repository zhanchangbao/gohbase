//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-rc.1
// 	protoc        v3.17.3
// source: Replication.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReplicationState_State int32

const (
	ReplicationState_ENABLED  ReplicationState_State = 0
	ReplicationState_DISABLED ReplicationState_State = 1
)

// Enum value maps for ReplicationState_State.
var (
	ReplicationState_State_name = map[int32]string{
		0: "ENABLED",
		1: "DISABLED",
	}
	ReplicationState_State_value = map[string]int32{
		"ENABLED":  0,
		"DISABLED": 1,
	}
)

func (x ReplicationState_State) Enum() *ReplicationState_State {
	p := new(ReplicationState_State)
	*p = x
	return p
}

func (x ReplicationState_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplicationState_State) Descriptor() protoreflect.EnumDescriptor {
	return file_Replication_proto_enumTypes[0].Descriptor()
}

func (ReplicationState_State) Type() protoreflect.EnumType {
	return &file_Replication_proto_enumTypes[0]
}

func (x ReplicationState_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ReplicationState_State) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ReplicationState_State(num)
	return nil
}

// Deprecated: Use ReplicationState_State.Descriptor instead.
func (ReplicationState_State) EnumDescriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{2, 0}
}

type TableCF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName *TableName `protobuf:"bytes,1,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	Families  [][]byte   `protobuf:"bytes,2,rep,name=families" json:"families,omitempty"`
}

func (x *TableCF) Reset() {
	*x = TableCF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableCF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableCF) ProtoMessage() {}

func (x *TableCF) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableCF.ProtoReflect.Descriptor instead.
func (*TableCF) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{0}
}

func (x *TableCF) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

func (x *TableCF) GetFamilies() [][]byte {
	if x != nil {
		return x.Families
	}
	return nil
}

//*
// Used by replication. Holds a replication peer key.
type ReplicationPeer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// clusterkey is the concatenation of the slave cluster's
	// hbase.zookeeper.quorum:hbase.zookeeper.property.clientPort:zookeeper.znode.parent
	Clusterkey              *string           `protobuf:"bytes,1,opt,name=clusterkey" json:"clusterkey,omitempty"`
	ReplicationEndpointImpl *string           `protobuf:"bytes,2,opt,name=replicationEndpointImpl" json:"replicationEndpointImpl,omitempty"`
	Data                    []*BytesBytesPair `protobuf:"bytes,3,rep,name=data" json:"data,omitempty"`
	Configuration           []*NameStringPair `protobuf:"bytes,4,rep,name=configuration" json:"configuration,omitempty"`
	TableCfs                []*TableCF        `protobuf:"bytes,5,rep,name=table_cfs,json=tableCfs" json:"table_cfs,omitempty"`
	Namespaces              [][]byte          `protobuf:"bytes,6,rep,name=namespaces" json:"namespaces,omitempty"`
	Bandwidth               *int64            `protobuf:"varint,7,opt,name=bandwidth" json:"bandwidth,omitempty"`
	ReplicateAll            *bool             `protobuf:"varint,8,opt,name=replicate_all,json=replicateAll" json:"replicate_all,omitempty"`
	ExcludeTableCfs         []*TableCF        `protobuf:"bytes,9,rep,name=exclude_table_cfs,json=excludeTableCfs" json:"exclude_table_cfs,omitempty"`
	ExcludeNamespaces       [][]byte          `protobuf:"bytes,10,rep,name=exclude_namespaces,json=excludeNamespaces" json:"exclude_namespaces,omitempty"`
	Serial                  *bool             `protobuf:"varint,11,opt,name=serial" json:"serial,omitempty"`
}

func (x *ReplicationPeer) Reset() {
	*x = ReplicationPeer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationPeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationPeer) ProtoMessage() {}

func (x *ReplicationPeer) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationPeer.ProtoReflect.Descriptor instead.
func (*ReplicationPeer) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{1}
}

func (x *ReplicationPeer) GetClusterkey() string {
	if x != nil && x.Clusterkey != nil {
		return *x.Clusterkey
	}
	return ""
}

func (x *ReplicationPeer) GetReplicationEndpointImpl() string {
	if x != nil && x.ReplicationEndpointImpl != nil {
		return *x.ReplicationEndpointImpl
	}
	return ""
}

func (x *ReplicationPeer) GetData() []*BytesBytesPair {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ReplicationPeer) GetConfiguration() []*NameStringPair {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *ReplicationPeer) GetTableCfs() []*TableCF {
	if x != nil {
		return x.TableCfs
	}
	return nil
}

func (x *ReplicationPeer) GetNamespaces() [][]byte {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *ReplicationPeer) GetBandwidth() int64 {
	if x != nil && x.Bandwidth != nil {
		return *x.Bandwidth
	}
	return 0
}

func (x *ReplicationPeer) GetReplicateAll() bool {
	if x != nil && x.ReplicateAll != nil {
		return *x.ReplicateAll
	}
	return false
}

func (x *ReplicationPeer) GetExcludeTableCfs() []*TableCF {
	if x != nil {
		return x.ExcludeTableCfs
	}
	return nil
}

func (x *ReplicationPeer) GetExcludeNamespaces() [][]byte {
	if x != nil {
		return x.ExcludeNamespaces
	}
	return nil
}

func (x *ReplicationPeer) GetSerial() bool {
	if x != nil && x.Serial != nil {
		return *x.Serial
	}
	return false
}

//*
// Used by replication. Holds whether enabled or disabled
type ReplicationState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *ReplicationState_State `protobuf:"varint,1,req,name=state,enum=hbase.pb.ReplicationState_State" json:"state,omitempty"`
}

func (x *ReplicationState) Reset() {
	*x = ReplicationState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationState) ProtoMessage() {}

func (x *ReplicationState) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationState.ProtoReflect.Descriptor instead.
func (*ReplicationState) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{2}
}

func (x *ReplicationState) GetState() ReplicationState_State {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ReplicationState_ENABLED
}

//*
// Used by replication. Description of the replication peer.
type ReplicationPeerDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *string           `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	State  *ReplicationState `protobuf:"bytes,2,req,name=state" json:"state,omitempty"`
	Config *ReplicationPeer  `protobuf:"bytes,3,req,name=config" json:"config,omitempty"`
}

func (x *ReplicationPeerDescription) Reset() {
	*x = ReplicationPeerDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationPeerDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationPeerDescription) ProtoMessage() {}

func (x *ReplicationPeerDescription) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationPeerDescription.ProtoReflect.Descriptor instead.
func (*ReplicationPeerDescription) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{3}
}

func (x *ReplicationPeerDescription) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ReplicationPeerDescription) GetState() *ReplicationState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *ReplicationPeerDescription) GetConfig() *ReplicationPeer {
	if x != nil {
		return x.Config
	}
	return nil
}

//*
// Used by replication. Holds the current position in an WAL file.
type ReplicationHLogPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *int64 `protobuf:"varint,1,req,name=position" json:"position,omitempty"`
}

func (x *ReplicationHLogPosition) Reset() {
	*x = ReplicationHLogPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationHLogPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationHLogPosition) ProtoMessage() {}

func (x *ReplicationHLogPosition) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationHLogPosition.ProtoReflect.Descriptor instead.
func (*ReplicationHLogPosition) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{4}
}

func (x *ReplicationHLogPosition) GetPosition() int64 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

type AddReplicationPeerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId     *string           `protobuf:"bytes,1,req,name=peer_id,json=peerId" json:"peer_id,omitempty"`
	PeerConfig *ReplicationPeer  `protobuf:"bytes,2,req,name=peer_config,json=peerConfig" json:"peer_config,omitempty"`
	PeerState  *ReplicationState `protobuf:"bytes,3,req,name=peer_state,json=peerState" json:"peer_state,omitempty"`
}

func (x *AddReplicationPeerRequest) Reset() {
	*x = AddReplicationPeerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReplicationPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReplicationPeerRequest) ProtoMessage() {}

func (x *AddReplicationPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReplicationPeerRequest.ProtoReflect.Descriptor instead.
func (*AddReplicationPeerRequest) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{5}
}

func (x *AddReplicationPeerRequest) GetPeerId() string {
	if x != nil && x.PeerId != nil {
		return *x.PeerId
	}
	return ""
}

func (x *AddReplicationPeerRequest) GetPeerConfig() *ReplicationPeer {
	if x != nil {
		return x.PeerConfig
	}
	return nil
}

func (x *AddReplicationPeerRequest) GetPeerState() *ReplicationState {
	if x != nil {
		return x.PeerState
	}
	return nil
}

type AddReplicationPeerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *AddReplicationPeerResponse) Reset() {
	*x = AddReplicationPeerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReplicationPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReplicationPeerResponse) ProtoMessage() {}

func (x *AddReplicationPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReplicationPeerResponse.ProtoReflect.Descriptor instead.
func (*AddReplicationPeerResponse) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{6}
}

func (x *AddReplicationPeerResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type RemoveReplicationPeerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId *string `protobuf:"bytes,1,req,name=peer_id,json=peerId" json:"peer_id,omitempty"`
}

func (x *RemoveReplicationPeerRequest) Reset() {
	*x = RemoveReplicationPeerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveReplicationPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveReplicationPeerRequest) ProtoMessage() {}

func (x *RemoveReplicationPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveReplicationPeerRequest.ProtoReflect.Descriptor instead.
func (*RemoveReplicationPeerRequest) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveReplicationPeerRequest) GetPeerId() string {
	if x != nil && x.PeerId != nil {
		return *x.PeerId
	}
	return ""
}

type RemoveReplicationPeerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *RemoveReplicationPeerResponse) Reset() {
	*x = RemoveReplicationPeerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveReplicationPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveReplicationPeerResponse) ProtoMessage() {}

func (x *RemoveReplicationPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveReplicationPeerResponse.ProtoReflect.Descriptor instead.
func (*RemoveReplicationPeerResponse) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveReplicationPeerResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type EnableReplicationPeerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId *string `protobuf:"bytes,1,req,name=peer_id,json=peerId" json:"peer_id,omitempty"`
}

func (x *EnableReplicationPeerRequest) Reset() {
	*x = EnableReplicationPeerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableReplicationPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableReplicationPeerRequest) ProtoMessage() {}

func (x *EnableReplicationPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableReplicationPeerRequest.ProtoReflect.Descriptor instead.
func (*EnableReplicationPeerRequest) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{9}
}

func (x *EnableReplicationPeerRequest) GetPeerId() string {
	if x != nil && x.PeerId != nil {
		return *x.PeerId
	}
	return ""
}

type EnableReplicationPeerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *EnableReplicationPeerResponse) Reset() {
	*x = EnableReplicationPeerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableReplicationPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableReplicationPeerResponse) ProtoMessage() {}

func (x *EnableReplicationPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableReplicationPeerResponse.ProtoReflect.Descriptor instead.
func (*EnableReplicationPeerResponse) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{10}
}

func (x *EnableReplicationPeerResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type DisableReplicationPeerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId *string `protobuf:"bytes,1,req,name=peer_id,json=peerId" json:"peer_id,omitempty"`
}

func (x *DisableReplicationPeerRequest) Reset() {
	*x = DisableReplicationPeerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableReplicationPeerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableReplicationPeerRequest) ProtoMessage() {}

func (x *DisableReplicationPeerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableReplicationPeerRequest.ProtoReflect.Descriptor instead.
func (*DisableReplicationPeerRequest) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{11}
}

func (x *DisableReplicationPeerRequest) GetPeerId() string {
	if x != nil && x.PeerId != nil {
		return *x.PeerId
	}
	return ""
}

type DisableReplicationPeerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *DisableReplicationPeerResponse) Reset() {
	*x = DisableReplicationPeerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableReplicationPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableReplicationPeerResponse) ProtoMessage() {}

func (x *DisableReplicationPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableReplicationPeerResponse.ProtoReflect.Descriptor instead.
func (*DisableReplicationPeerResponse) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{12}
}

func (x *DisableReplicationPeerResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type GetReplicationPeerConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId *string `protobuf:"bytes,1,req,name=peer_id,json=peerId" json:"peer_id,omitempty"`
}

func (x *GetReplicationPeerConfigRequest) Reset() {
	*x = GetReplicationPeerConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReplicationPeerConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicationPeerConfigRequest) ProtoMessage() {}

func (x *GetReplicationPeerConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicationPeerConfigRequest.ProtoReflect.Descriptor instead.
func (*GetReplicationPeerConfigRequest) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{13}
}

func (x *GetReplicationPeerConfigRequest) GetPeerId() string {
	if x != nil && x.PeerId != nil {
		return *x.PeerId
	}
	return ""
}

type GetReplicationPeerConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId     *string          `protobuf:"bytes,1,req,name=peer_id,json=peerId" json:"peer_id,omitempty"`
	PeerConfig *ReplicationPeer `protobuf:"bytes,2,req,name=peer_config,json=peerConfig" json:"peer_config,omitempty"`
}

func (x *GetReplicationPeerConfigResponse) Reset() {
	*x = GetReplicationPeerConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReplicationPeerConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicationPeerConfigResponse) ProtoMessage() {}

func (x *GetReplicationPeerConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicationPeerConfigResponse.ProtoReflect.Descriptor instead.
func (*GetReplicationPeerConfigResponse) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{14}
}

func (x *GetReplicationPeerConfigResponse) GetPeerId() string {
	if x != nil && x.PeerId != nil {
		return *x.PeerId
	}
	return ""
}

func (x *GetReplicationPeerConfigResponse) GetPeerConfig() *ReplicationPeer {
	if x != nil {
		return x.PeerConfig
	}
	return nil
}

type UpdateReplicationPeerConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerId     *string          `protobuf:"bytes,1,req,name=peer_id,json=peerId" json:"peer_id,omitempty"`
	PeerConfig *ReplicationPeer `protobuf:"bytes,2,req,name=peer_config,json=peerConfig" json:"peer_config,omitempty"`
}

func (x *UpdateReplicationPeerConfigRequest) Reset() {
	*x = UpdateReplicationPeerConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReplicationPeerConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReplicationPeerConfigRequest) ProtoMessage() {}

func (x *UpdateReplicationPeerConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReplicationPeerConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateReplicationPeerConfigRequest) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateReplicationPeerConfigRequest) GetPeerId() string {
	if x != nil && x.PeerId != nil {
		return *x.PeerId
	}
	return ""
}

func (x *UpdateReplicationPeerConfigRequest) GetPeerConfig() *ReplicationPeer {
	if x != nil {
		return x.PeerConfig
	}
	return nil
}

type UpdateReplicationPeerConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId *uint64 `protobuf:"varint,1,opt,name=proc_id,json=procId" json:"proc_id,omitempty"`
}

func (x *UpdateReplicationPeerConfigResponse) Reset() {
	*x = UpdateReplicationPeerConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReplicationPeerConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReplicationPeerConfigResponse) ProtoMessage() {}

func (x *UpdateReplicationPeerConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReplicationPeerConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateReplicationPeerConfigResponse) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateReplicationPeerConfigResponse) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

type ListReplicationPeersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regex *string `protobuf:"bytes,1,opt,name=regex" json:"regex,omitempty"`
}

func (x *ListReplicationPeersRequest) Reset() {
	*x = ListReplicationPeersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReplicationPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReplicationPeersRequest) ProtoMessage() {}

func (x *ListReplicationPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReplicationPeersRequest.ProtoReflect.Descriptor instead.
func (*ListReplicationPeersRequest) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{17}
}

func (x *ListReplicationPeersRequest) GetRegex() string {
	if x != nil && x.Regex != nil {
		return *x.Regex
	}
	return ""
}

type ListReplicationPeersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerDesc []*ReplicationPeerDescription `protobuf:"bytes,1,rep,name=peer_desc,json=peerDesc" json:"peer_desc,omitempty"`
}

func (x *ListReplicationPeersResponse) Reset() {
	*x = ListReplicationPeersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Replication_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReplicationPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReplicationPeersResponse) ProtoMessage() {}

func (x *ListReplicationPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Replication_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReplicationPeersResponse.ProtoReflect.Descriptor instead.
func (*ListReplicationPeersResponse) Descriptor() ([]byte, []int) {
	return file_Replication_proto_rawDescGZIP(), []int{18}
}

func (x *ListReplicationPeersResponse) GetPeerDesc() []*ReplicationPeerDescription {
	if x != nil {
		return x.PeerDesc
	}
	return nil
}

var File_Replication_proto protoreflect.FileDescriptor

var file_Replication_proto_rawDesc = []byte{
	0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x1a, 0x0b, 0x48,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a, 0x07, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x46, 0x12, 0x32, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x6d,
	0x69, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x61, 0x6d,
	0x69, 0x6c, 0x69, 0x65, 0x73, 0x22, 0xf2, 0x03, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x17, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x49, 0x6d, 0x70, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49,
	0x6d, 0x70, 0x6c, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x3e, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2e, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x46, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x66,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x41, 0x6c, 0x6c, 0x12, 0x3d, 0x0a, 0x11, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x66, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x46, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x66, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x11, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0x6e, 0x0a, 0x10, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x22, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x22, 0x91, 0x01, 0x0a, 0x1a, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x35,
	0x0a, 0x17, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x4c, 0x6f,
	0x67, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x01, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0b,
	0x70, 0x65, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x65,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x70, 0x65, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x35, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x1c, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x64, 0x22, 0x37, 0x0a,
	0x1c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x1d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x64,
	0x22, 0x38, 0x0a, 0x1d, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x1e, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70,
	0x72, 0x6f, 0x63, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x77, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3a,
	0x0a, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x0a,
	0x70, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x79, 0x0a, 0x22, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x65, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x3e, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70,
	0x72, 0x6f, 0x63, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x22, 0x61, 0x0a, 0x1c, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x70, 0x65,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x42, 0x55, 0x0a,
	0x31, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x68, 0x61, 0x64, 0x6f,
	0x6f, 0x70, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x73, 0x68, 0x61, 0x64, 0x65, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x48, 0x01, 0x5a, 0x05, 0x2e, 0x2e, 0x2f, 0x70, 0x62, 0x88, 0x01,
	0x01, 0xa0, 0x01, 0x01,
}

var (
	file_Replication_proto_rawDescOnce sync.Once
	file_Replication_proto_rawDescData = file_Replication_proto_rawDesc
)

func file_Replication_proto_rawDescGZIP() []byte {
	file_Replication_proto_rawDescOnce.Do(func() {
		file_Replication_proto_rawDescData = protoimpl.X.CompressGZIP(file_Replication_proto_rawDescData)
	})
	return file_Replication_proto_rawDescData
}

var file_Replication_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Replication_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_Replication_proto_goTypes = []interface{}{
	(ReplicationState_State)(0),                 // 0: hbase.pb.ReplicationState.State
	(*TableCF)(nil),                             // 1: hbase.pb.TableCF
	(*ReplicationPeer)(nil),                     // 2: hbase.pb.ReplicationPeer
	(*ReplicationState)(nil),                    // 3: hbase.pb.ReplicationState
	(*ReplicationPeerDescription)(nil),          // 4: hbase.pb.ReplicationPeerDescription
	(*ReplicationHLogPosition)(nil),             // 5: hbase.pb.ReplicationHLogPosition
	(*AddReplicationPeerRequest)(nil),           // 6: hbase.pb.AddReplicationPeerRequest
	(*AddReplicationPeerResponse)(nil),          // 7: hbase.pb.AddReplicationPeerResponse
	(*RemoveReplicationPeerRequest)(nil),        // 8: hbase.pb.RemoveReplicationPeerRequest
	(*RemoveReplicationPeerResponse)(nil),       // 9: hbase.pb.RemoveReplicationPeerResponse
	(*EnableReplicationPeerRequest)(nil),        // 10: hbase.pb.EnableReplicationPeerRequest
	(*EnableReplicationPeerResponse)(nil),       // 11: hbase.pb.EnableReplicationPeerResponse
	(*DisableReplicationPeerRequest)(nil),       // 12: hbase.pb.DisableReplicationPeerRequest
	(*DisableReplicationPeerResponse)(nil),      // 13: hbase.pb.DisableReplicationPeerResponse
	(*GetReplicationPeerConfigRequest)(nil),     // 14: hbase.pb.GetReplicationPeerConfigRequest
	(*GetReplicationPeerConfigResponse)(nil),    // 15: hbase.pb.GetReplicationPeerConfigResponse
	(*UpdateReplicationPeerConfigRequest)(nil),  // 16: hbase.pb.UpdateReplicationPeerConfigRequest
	(*UpdateReplicationPeerConfigResponse)(nil), // 17: hbase.pb.UpdateReplicationPeerConfigResponse
	(*ListReplicationPeersRequest)(nil),         // 18: hbase.pb.ListReplicationPeersRequest
	(*ListReplicationPeersResponse)(nil),        // 19: hbase.pb.ListReplicationPeersResponse
	(*TableName)(nil),                           // 20: hbase.pb.TableName
	(*BytesBytesPair)(nil),                      // 21: hbase.pb.BytesBytesPair
	(*NameStringPair)(nil),                      // 22: hbase.pb.NameStringPair
}
var file_Replication_proto_depIdxs = []int32{
	20, // 0: hbase.pb.TableCF.table_name:type_name -> hbase.pb.TableName
	21, // 1: hbase.pb.ReplicationPeer.data:type_name -> hbase.pb.BytesBytesPair
	22, // 2: hbase.pb.ReplicationPeer.configuration:type_name -> hbase.pb.NameStringPair
	1,  // 3: hbase.pb.ReplicationPeer.table_cfs:type_name -> hbase.pb.TableCF
	1,  // 4: hbase.pb.ReplicationPeer.exclude_table_cfs:type_name -> hbase.pb.TableCF
	0,  // 5: hbase.pb.ReplicationState.state:type_name -> hbase.pb.ReplicationState.State
	3,  // 6: hbase.pb.ReplicationPeerDescription.state:type_name -> hbase.pb.ReplicationState
	2,  // 7: hbase.pb.ReplicationPeerDescription.config:type_name -> hbase.pb.ReplicationPeer
	2,  // 8: hbase.pb.AddReplicationPeerRequest.peer_config:type_name -> hbase.pb.ReplicationPeer
	3,  // 9: hbase.pb.AddReplicationPeerRequest.peer_state:type_name -> hbase.pb.ReplicationState
	2,  // 10: hbase.pb.GetReplicationPeerConfigResponse.peer_config:type_name -> hbase.pb.ReplicationPeer
	2,  // 11: hbase.pb.UpdateReplicationPeerConfigRequest.peer_config:type_name -> hbase.pb.ReplicationPeer
	4,  // 12: hbase.pb.ListReplicationPeersResponse.peer_desc:type_name -> hbase.pb.ReplicationPeerDescription
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_Replication_proto_init() }
func file_Replication_proto_init() {
	if File_Replication_proto != nil {
		return
	}
	file_HBase_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Replication_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableCF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicationPeer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicationState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicationPeerDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicationHLogPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReplicationPeerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReplicationPeerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveReplicationPeerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveReplicationPeerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableReplicationPeerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableReplicationPeerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableReplicationPeerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableReplicationPeerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReplicationPeerConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReplicationPeerConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReplicationPeerConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReplicationPeerConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReplicationPeersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Replication_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReplicationPeersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Replication_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Replication_proto_goTypes,
		DependencyIndexes: file_Replication_proto_depIdxs,
		EnumInfos:         file_Replication_proto_enumTypes,
		MessageInfos:      file_Replication_proto_msgTypes,
	}.Build()
	File_Replication_proto = out.File
	file_Replication_proto_rawDesc = nil
	file_Replication_proto_goTypes = nil
	file_Replication_proto_depIdxs = nil
}
